<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync Incident</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var rm = new sn_ws.RESTMessageV2('SN_CIE_DEV', 'post');
	rm.setStringParameter('number', current.number);
	rm.setStringParameter('short_description', current.short_description);
	rm.setStringParameter('description', current.short_description);
	rm.setStringParameter('category', current.category);
	rm.setStringParameter('caller', current.caller_id);
	rm.setStringParameter('subcategory', current.subcategory);
	rm.setStringParameter('state', current.state);
	
	//Build work_notes response from Journal field
	var work_note_history = new GlideRecord('sys_journal_field');
	work_note_history.addQuery('element','work_notes');
	work_note_history.addQuery('element_id',current.sys_id);
	//work_note_history.addEncodedQuery('sys_created_on>javascript:gs.minutesAgoStart(1)');
	work_note_history.query();
	if (work_note_history.next()) {
		var work_note_time = new GlideDateTime(work_note_history.sys_created_on);
		work_note_time.addSeconds(5);
		if (work_note_time > gs.nowDateTime())
			rm.setStringParameter("work_notes", jsonEncode(current.work_notes.getJournalEntry(1)));
	}
	
	var res = rm.execute();
	
	if( res.haveError() ){
		gs.log("SN_CIE_DEV_incident POST FAILURE: " + res.getStatusCode() + ": " + res.getErrorMessage());
	} else {
		gs.log("SN_CIE_DEV_incident POST SUCCESS: "+ res.getBody());
	}
	
	function jsonEncode(str) {
		str = new JSON().encode(str);
		return str.substring(1, str.length - 1);
	}
	var parser = new JSONParser();
	var parsed = parser.parse(res.getBody());
	
	var xmldoc = new XMLDocument(parsed.result.sys_import_state_comment);
	var action = xmldoc.getNodeText("//action");
	var external_ref_number = xmldoc.getNodeText("//external_ref_number");
	var external_ref_id = xmldoc.getNodeText("//external_ref_id");
	
	current.setWorkflow(false); //Do not run business rules
	current.autoSysFields(false); //Do not update system fields
	
	current.u_third_party_reference = external_ref_number;
	current.update();
	
	
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-02-27 10:45:16</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9d13d084db513200e2f6d190cf961989</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Sync Incident</sys_name>
        <sys_overrides/>
        <sys_package display_value="Sync Items" source="x_36585_sync_items">d7d38044db113200e2f6d190cf9619b4</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Sync Items">d7d38044db113200e2f6d190cf9619b4</sys_scope>
        <sys_update_name>sys_script_9d13d084db513200e2f6d190cf961989</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-02-27 10:45:48</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9d13d084db513200e2f6d190cf961989"/>
</record_update>
